# Pre-install data.table as binary for non-devel macOS and Windows
      - name: Pre-install data.table binary
        if: (runner.os == 'Windows' || (runner.os == 'macOS' && matrix.config.r != 'devel'))
        run: |
          install.packages("data.table", type = "binary", repos = "https://cloud.r-project.org")
        shell: Rscript {0}# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: macos-latest,   r: 'devel'}
          - {os: macos-latest,   r: 'oldrel-1'}
          # - {os: macos-13,       r: '3.6.3'} # fails with macos-latest because it is ARM only?
          - {os: macos-13,       r: '4.0.5'} # fails with macos-latest because it is ARM only?
          - {os: macos-13,       r: '4.1.3'} # fails with macos-latest because it is ARM only?
          - {os: macos-latest,   r: '4.2.3'}
          - {os: macos-latest,   r: '4.3.3'}
          - {os: macos-latest,   r: '4.4.0'}
          - {os: windows-latest, r: 'release'}
          - {os: windows-latest, r: 'devel'}
          - {os: windows-latest, r: 'oldrel-1'}
          - {os: windows-latest, r: '4.1.3'} # failing
          - {os: windows-latest, r: '4.0.5'} # failing
          # - {os: windows-latest, r: '3.6.3'} # failing
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,  r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      CI: true
      _R_CHECK_ARGS_: '--no-tests --no-manual'
      _R_CHECK_FORCE_SUGGESTS_: false
      _R_CHECK_TESTS_: false
      # Force R to use binary packages on macOS/Windows only
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      R_REMOTES_UPGRADE: never
      INSTALL_OPTS: "--no-build-vignettes --no-manual --as-cran --no-multiarch"

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      # Added step to configure R to use binary packages
      - name: Configure R package repository
        run: |
          # Set binary package type
          options(repos = c(CRAN = "https://cloud.r-project.org"))
          options(pkgType = "binary")

          # Create a .Rprofile to force binary packages
          cat('options(pkgType="binary")\n', file = "~/.Rprofile", append = TRUE)
          cat('options(install.packages.compile.from.source="never")\n', file = "~/.Rprofile", append = TRUE)
          cat('Sys.setenv(PKG_TYPE="binary")\n', file = "~/.Rprofile", append = TRUE)
          cat('Sys.setenv(PKGTYPE="binary")\n', file = "~/.Rprofile", append = TRUE)
        shell: Rscript {0}

      # Special handling for data.table on macOS devel
      - name: Special handling for data.table on macOS devel
        if: runner.os == 'macOS' && matrix.config.r == 'devel'
        run: |
          # Install dependencies needed for data.table on macOS
          brew install gettext
          brew link gettext --force

          # Create a simple package that depends on data.table to force binary installation
          dir.create("dt_wrapper")
          cat('Package: dt_wrapper\nVersion: 0.1\nDepends: R (>= 3.0.0)\nImports: data.table\nDescription: Wrapper for data.table\nLicense: GPL-3\n',
              file = "dt_wrapper/DESCRIPTION")
          dir.create("dt_wrapper/R")
          cat('# Dummy function\ndummy <- function() { data.table::data.table() }\n',
              file = "dt_wrapper/R/dummy.R")

          # Install the wrapper package which will install data.table as a dependency
          install.packages("dt_wrapper", repos = NULL, type = "source")
        shell: bash {0}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          dependencies: '"hard"'
          extra-packages: any::rcmdcheck
          needs: check
          # Added to use binary packages
          options: '"--no-build-vignettes" "--no-manual" "--as-cran" "--no-multiarch"'
          pak-version: devel

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf","--no-tests")'
          args: 'c("--no-manual","--no-tests")'
