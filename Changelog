
Keep *EVERYTHING* regarding changes in here, rather than moving some to NEWS.md.
We can decide what to include in NEWS just before we release.

The more detail the better.

For now - direct changes/commits to dev go in here. Keep a separate changelog text file in each branch, then copy it in here when it is merged.


================================== HIGHLIGHTS ==================================
- NEW: `subset_rate` function. This allows `auto_rate` results to be explored and filtered according to various criteria.
- NEW: `adjust_rate` contains several new methods of adjusting for background respiration, including the ability to perform adjusments from paired or concurrent blank chambers, and to perform dynamic adjustments for background rates which change over the course of an experiment.
- NEW: Completely new flowthrough respirometry workflow. There are four new flowthrough-specific functions and new functionality for exploring, calculating and adjusting rates from flowthrough respirometry data.
- NEW: `auto_rate` "rolling" method. Performs fixed-width rolling regressions across the entire dataset with no ordering of results. This pairs nicely with the new `subset_rate` function to allows users full control of selection criteria (albeit with fixed width regressions)
- NEW: auto_rate "highest" and "lowest" methods for absolute minimum and maximum of rates regardless of sign
- NEW: `inspect` and `inspect`.ft performs additional data checks: that columns contain numeric data and a check for infinite values
- NEW: Rates can now be output as surface area-specific rates via the `area` input in `convert_rate` (accepts `"mm2"`, `"cm2"`, `"m2"`, `"km2"`). You can also use `day` as the time metric in output rates (e.g. `"mgO2/day/m2"`)
- NEW: Several new dissolved oxygen units are now supported in `convert_DO` and `convert_rate` including percent oxygen saturation, moles of oxygen, and more.
- NEW: `convert_val` function. A simple conversion function to help with inputting experimental parameters in the correct units.
- `citation("respR")` returns the citation to the `respR` journal publication, including a BibTeX entry for LaTeX users or other applications which accept this.
- Help documentation and vignettes rewritten and greatly expanded
- Tested with R 4.1 and the new native pipes (`|>`)
- Tested with Apple Silicon builds of R

=============================== General Changes ================================
- CHANGE: S3 Generic functions (`print()`, `summary()`, `plot()`) revised to produce cleaner, consistent outputs.
- CHANGE: Added `$rank` column to all `$summary` tables as first column to helps with consistent S3 summary outputs and generally keeping track of summary rows
- CHANGE: Documentation terminology clarifed. Rates now referred to as "absolute" (for whole animal or chamber) and mass- or area-specific.
- CHANGE: Updated startup message for full MEE citation
- CHANGE: Changed the data frame in output objects to `$dataframe` for consistency (was previously `$df`, `$data`, `$dataframe`, etc.)
- CHANGE: For consistency, changed primary function inputs from `df` to `x` where appropriate (`auto_rate`, `inspect`, `inspect.ft`, `subsample`). This was inconsistent and often confusing, in that `df` often did not have to be a data frame, but could be a different class of object.
- CHANGE: The deprecated functions `inspect_data` and `pcrit` have been removed
- CHANGE: Outputs (where relevant) have function call saved to `$call` element
- CHANGE: Outputs (where relevant) have all inputs saved to `$inputs` element
- CHANGE: Messages, warnings and errors now state what function they originate from. This was not always clear, especially in pipes
- FIX: Proper `par()` restoration behaviour.


======================== Function specific changes =============================

========================== inspect() ============================
- NEW: Checks that each column contains numeric data. This is the most important check, and if any column fails, the function skips the remaining checks for that column and returns a NULL result
- NEW: Checks for infinite values (`Inf/-Inf`) in all inspected columns
- NEW: If uneven time intervals are detected, it now prints the minimum and maximum intervals found in the time data which can help indicate if there is a large gap in the data
- NEW: Added a `width` input to adjust rolling rate plot (default is 0.1)
- NEW: An additional data type (for example temperature, salinity, etc.) can be plotted alongside the oxygen timeseries by using the `add.data` input. This should be a column number from the same input data frame and share the same `time` data. Data checks are *not* performed on this column (unless all columns are specifically inspected), it is simply a plotting aid to understand where the parameter may affect rates in different regions of the data. There is similar functionality in `inspect.ft`.
- NEW: Can pass `rate.rev = FALSE` to plot rates *not* numerically reversed (for oxygen production respirometry)
- NEW: Can pass `legend = FALSE` to suppress legends
- NEW: `summary()` now works on output (although it's simply a wrapper for `print()`)

- CHANGE: Multiple rate plot improved. Now all plot on same axis range, better colours and spacing.
- CHANGE: Prints `NA` locations for all oxygen columns they are found in (previously only printed for first column)
- CHANGE: If multiple columns are inspected, message that columns 1 and 2 are used by default by subsequent functions, although all are inspected.
- CHANGE: Stops if `oxygen` or `time` columns are not present in the input, or conflict with each other
- CHANGE: Prints on assigning
- CHANGE: Output has additional elements `$call`, `$inputs` and `$add.data`
- CHANGE: Output `$list` and `$list_raw` renamed `$locs` and `$locs_raw`

- FIX: Rolling rate plot failed with even a single `NA` in time or oxygen data.
- FIX: Fix for points sometimes being plotted twice slightly offset in large datasets.
- FIX: Any `time` error locations are now printed when multiple oxygen columns are inspected


================================ calc_rate() ===================================
- NEW: Plot updated with title showing the rank of the current plot. It also now plots oxygen and rate against both time and row index
- NEW: Now calculates from start of the data if `from = NULL`, and to the end of the data if `to = NULL`
- NEW: S3 Generics: `plot()` has the additional inputs `panel` to plot selected panels individually, and `legend` to suppress the legend and other labels.

- CHANGE: Detects and warns about multi-column inputs
- CHANGE: Output elements have been renamed
- CHANGE: Most `$summary` columns have been renamed and reordered to be consistent with other functions
- CHANGE: Plots full 4 panel plot by default

- FIX: `by = "proportion"` and `by = "oxygen"` now work correctly with oxygen *production* data. Previously these methods didn`t work with rising oxygen as the code for finding the from/to values assumed it was decreasing. Now it identifes all data within the range of from/to. Essentially this makes from/to interchangeable. Note this change means with some data it may give slightly different results than v1.1 because of the way the from-to region is identified internally. With most data any difference in rates should be very minor.
- FIX: Fix for failure to plot with very small datasets (2-5 values)
- FIX: Fix for failing to work when there were `NA` in the time data


================================ auto_rate() ===================================
- NEW - `"rolling"` method. Performs simple rolling regression of specified width, with *no* ordering of results. This pairs nicely with the new `subset_rate` function to allows users full control of selection criteria (albeit with fixed width regressions)
- NEW `"highest"` and `"lowest"` methods for *absolute* minimum and maximum rate values regardless of sign. These can only be used when rates all have the same sign.
- NEW `"maximum"` and `"minimum"` methods. These work the *opposite* way to `"min"` and `"max"` from v1.1. These are strictly numerical, and order by value taking account of the sign.
- NEW: Added the Kernel Density metric `$density` to the `$summary` table for the `"linear"` method. This allows you to see how the results are ranked in regards to KDE (also present for other methods, but as an `NA` column).
- NEW: Added `$oxy` and `$endoxy` to the `$summary` table, so you can easily see roughly how much of an oxygen change each regression is using to calculate a rate. This also matches the summary table in `calc_rate`
- NEW: Plot updated with title showing the rank of the current plot. It also now plots oxygen and rate against both time and row index.
- NEW: Can pass `rate.rev = FALSE` to plot rates *not* numerically reversed (for oxygen production respirometry)
- NEW: S3 Generics: `plot()` has the additional inputs `panel` to plot selected panels individually, and `legend` to suppress the legend and other labels.

- CHANGE: The `"min"`and `"max"` methods have been deprecated. They still work and produce the same results as in v1.1, but have a prominent warning. These will be removed entirely in a later version of `respR`.
- CHANGE: Under the `"linear"` method, occasionally linear regions which were identical but had different density scores were identified. The lower ranked duplicate results are now removed.
- CHANGE: The `width` input behaviour has changed slightly. Previously if it was a value between 0 and 1 it represented a proportional width of the whole dataset regardless of the `by` input. This now applies only to `by = "row"`. If `by = "time"` any value between 0 and 1 now represents (as with values above 1) a time window in the units of the time data.
- CHANGE: Reordered inputs to put `method` second
- CHANGE: Summary table reordered to be consistent with other functions
- CHANGE: Tidied and reordered summary S3 printout. Summary table comes first, density result printed more compactly for `"linear"` method
- CHANGE: The rolling regression plot (panel 3) is now plotted on the same x-axes of time and row as the full timeseries plot, and has better spacing.
- CHANGE: Prints all results of `"interval"` method regardless of `pos` or `width` inputs

- FIX: `plot()` now works correctly on `auto_rate` objects
- FIX: Fix for stopping with an obscure message when input datasets are small
- FIX: Removed unused method `"default"`
- FIX: Fix for plots failing when the result contained an `NA`
- FIX: `method = "max"` was missing `$total_regs` element from metadata
- FIX: Fixed an issue whereby under `by = "time"` and `method = "linear"` a non-proportional `width` (i.e. greater than 1) would get incorrectly passed as a row width rather than a time width. This was only an issue in data where time and row spacing were mismatched, for instance where time was in minutes or hours, or in seconds but not at one second intervals. This would not have affected returned rate *values*, but instead led to poor ranking of the returned rates.
- FIX: Fixed an issue where the function would fail when assembling final output
- FIX: Fixed an issue where rates would not be returned over regions which contained NA values. The function is now generally much more robust to missing values (though input data should whereever possible not contain NA values).


=============================== adjust_rate() ==================================
- NEW: Completely rewritten to allow several new methods, including dynamic background correction. It has the same original inputs (`x`, `by`) plus five additional ones. The `method` defaults to `"mean"` so previous code will output the same results as it did in v1.1, but there is a great deal of new functionality.

- CHANGE: In the output, `$corrected` changed to `$rate.adjusted`, and `$input.rate` changed to `$rate.input`

- FIX: The `adjustment` column was missing from `$summary` table
- FIX: `summary()` now works correctly on objects
- FIX: `print()` prints adjustment correctly if `pos` > 1


=============================== convert_rate() =================================
- NEW: Can now convert to surface area-specific rates via the `area` input (accepts `"mm2"`, `"cm2"`, `"m2"`, `"km2"`)
- NEW: Can now import data and output rates using `"day"` as the time unit e.g. `"mgO2/day/m2"`
- NEW: Can now output oxygen used in moles e.g. `"molO2/day/kg"`
- NEW: Can now output oxygen used in moles e.g. `"molO2/day/kg"`

- CHANGE: The `o2.unit` input has been renamed to `oxy.unit`
- CHANGE: `oxy.unit = NULL` and `time.unit = NULL` now stop the function instead of applying a default unit
- CHANGE: Now applies a default output unit for mass- and area specific rates as well as absolute rates
- CHANGE: `$output.unit` oxygen amount component now has "O2" appended to ensure it is not confused with the mass-specific component. For example, `"mgO2/h/mg"`, `"umolO2/day/kg"`.
- CHANGE: output elements have been renamed (e.g. `$output` to `$rate.output`, `$absolute` to `$rate.absolute` etc.).

- FIX: `summary()` prints summary table as columns correctly


================================== oxy_crit() ==================================
- NEW: This replaces the `calc_pcrit` function from v1.1
- NEW: `method` input. This selects the method to use to determine the critical oxygen value. At present either `"bsr"` for Broken-Stick or `"segmented"` for the Segmented method. Previously both were performed.
- NEW: `thin` input. Defaults to 5000. This applies only to the Broken-Stick regression analysis. If the dataset is longer than this, this determines the number of rows it is uniformly subsampled to before running the analysis. The BSR method is quite computationally intensive, so this speeds it up. In testing, values above this have little effect on the result, but this may vary with different data. To prevent any subsampling and use the entire dataset enter this as `NULL`.
- NEW: S3 Generics: `plot()` has the additional inputs `legend`, `quiet`, `rate.rev` and `panel`.
- NEW: S3 Generics: `summary()` allows results to be exported via `export = TRUE`.

- CHANGE: `parallel = FALSE` is now the default. Use `parallel = TRUE` to use parallel processing if your datasets are particularly large and the function is taking too long to process.
- CHANGE: Uptake rates are now plotted as negative in the rolling rate plot on a reversed y-axis. Plots look the same, but y-axis values are now negative. There is a `rate.rev` input to control this, for instance if you are using the function with existing positive rate values.
- CHANGE: An increase to the internal `thin` value (see above) from 1000 to 5000 may mean results will differ slightly from the previous version, but should be more accurate.
- CHANGE: Output has been completely restructured and elements renamed. Previous code used to extract results will likely now not work.

- FIX:  Fixed issue which caused a failure if the package wasn't loaded but function was called called, i.e. using `respR::oxy_crit()`
- FIX:  Fix for plot failure when results were very close together.


================================ import_file() =================================
- NEW: Imports European style formatted numeric data which uses commas instead of points for decimals.
- NEW: Support for Presens Datamanager files

- CHANGE: Importing now generally does not remove any columns (e.g. empty or NA columns). Column naming is now much improved (e.g. unique names, data type linked to channel IDs, etc.).

- FIX: Fix for PreSens Oxyvew csv and txt files not being imported as numeric. Now separate parsing for each.
- FIX: Fix for MiniDot files not being imported as numeric.
- FIX: Fix for Pyro/Firesting numeric columns being imported as character when Firesting software replaces missing data with "---"


================================ format_time() =================================
- CHANGE: Numeric time column name changed from `elapsed` to `time.num`

- FIX: Fix for not appending new numeric time column onto a `data.table`
- FIX: Fix for data frame columns being renamed on return
- FIX: Fix for not working with multiple date-time columns if one of them wasn't column 1
- FIX: Fix for failing to format date-times which were already in POSIX/POSIX.ct format


================================ convert_val() =================================
- New function for doing simple conversions between volume, time, mass, area and pressure units
- Useful for functions that have some inputs which must be in specific units, such as `convert_DO` and `convert_rate`. See Examples.


=============================== calc_rate.bg() =================================
- NEW: The oxygen timeseries is now plotted against both time and row index
- NEW: Plots have `legend` input to suppress equation text boxes

- CHANGE: In the output `$bgrate` changed to `$rate.bg`, and `$mean` changed to `$rate.bg.mean`
- CHANGE: Stops if `oxygen` or `time` columns not present in the input, or conflict with each other
- CHANGE: Removed "input detected" message at start


================================ convert_DO() ==================================
- NEW: Added support for % oxygen saturation (`"%O2"`) units. % air saturation is now `"%Air"` and the previous `"%"` operator for this has been deprecated
- NEW: Added support for oxygen concentration units of `mol/L` and `mol/kg`
- NEW: Added support for oxygen concentration units of `cm3/L`. This is a scarce unit, only used in older publications and is equivalent to `ml/L`.
- NEW: Added `simplify` input. The default is `simplify = TRUE` and means the converted values are output as a numeric vector, rather than within a `list` object. If `FALSE` the output is a `list` object of class `convert_DO` which works with `print()`, `summary()`, and `mean()`

- CHANGE: Removed ability to accept objects of class `calc_rate`, `auto_rate` or `adjust_rate`. This didn't make any sense in this function as rates are not a DO measure!
- CHANGE: Added warning for `P` atmospheric pressure values being outside a realistic range.

- FIX: Fix for error with non-numeric `x` inputs


================================ unit_args() ===================================
- NEW: Updated for new units (time in days, oxygen in mol and %O2) and more detail of which functions accept which units
- NEW: Updated with units for flowrates used in the new flowthrough respirometry workflow


================================= subsample() ==================================
- NEW: Now works on vectors as well as data frames
- NEW: Added `length.out` input which uniformly subsamples to an exact number of rows (data frames) or length (vectors)
- FIX: Now works with multicolumn data frames and plots them correctly (first data column only)


=============================== subset_data() ==================================
- NEW: Support for `inspect.ft` objects
- NEW: Added `quiet` input to allow console output to be suppressed
- NEW: Now subsets from start of the data if `from = NULL`, and to the end of the data if `to = NULL`

- CHANGE: Updated help documentation, particularly to specify that `by = "oxygen"` or `by = "proportion"` applies to first column only in multi-column dataframes
- CHANGE: Warns if output subset is empty

- FIX: Fix for failure with `inspect()` objects
- FIX: `by = "proportion"` and `by = "oxygen"` now work correctly with oxygen production data. Note this now generally results in longer subsets than v1.1 code because of a change in identifying where `to` is within the data.


============================== flowthrough data ================================
- NEW: `inspect.ft`
- NEW: `calc_rate.ft`
- NEW: `adjust_rate.ft`
- NEW: `convert_rate.ft`

- This is a completely new workflow specific to flowthough respirometry data. See help documentation and vignettes for full details.


==================================== data ======================================

- CHANGE: Example data are now all `data.table`
- CHANGE: `flowthrough.rd` amended to make delta column (i.e. unitless rates) negative values to be consistent with how uptake rates are always negative in the package
- CHANGE: `flowthrough.rd` column names changed to `time`, `oxy.out`, `oxy.in` and `oxy.delta`
- CHANGE: `zeb_intermittent.rd` column names changed to `Time` and `Oxygen`
- CHANGE: `sardine.rd` has had a `Temperature` column added (to demonstrate the new `inspect()` functionality to plot an additional data type)

NEW: New example datasets
- `algae.rd` - oxygen production data
- `flowthrough_mult.rd` - multiple column flowthrough data
- `flowthrough_sim.rd` - flowthrough data with increasing background recording
- `background_con.rd` - constant level background, for testing new background correction functionality
- `background_lin.rd` - linear increasing background, for testing new background correction functionality
- `background_exp.rd` - exponential increasing background, for testing new background correction functionality


================================= S3 Methods ===================================

Changes to `print()`, `summary()`, `plot()`, `mean()` behaviour:

`mean.adjust_rate`
`mean.adjust_rate.ft`
`mean.auto_rate`
`mean.calc_rate`
`mean.calc_rate.bg`
`mean.calc_rate.ft`
`mean.convert_rate`
`mean.convert_rate.ft`
- NEW: These are new generic S3 functions for calculating mean rates, and work on the relevant function output rate. None alter the output object, but have an `export` input so the mean values can be exported as a numeric value if `export = TRUE`. They also have a `pos` input (where relevant) to select a range of rates to average. Most useful is `mean.convert_rate` which can be used to output a final mean rate at the end of an analysis.

`mean.convert_DO`
- NEW: This works as the above but averages converted oxygen values from `convert_DO`. The output must have been saved as a `convert_DO` object for this to work by using `simplify = FALSE` (otherwise `convert_DO` by default outputs a numeric vector upon which `mean()` works anyway and gives the same result).

- NEW: All `plot()` S3 have a `quiet` input to suppress console output
- NEW: All `summary()` S3 (where appropriate) have `export = TRUE` for export of summary table or value
- NEW: All S3 (where appropriate) have `pos` input to select positions or ranks of results to plot, print or average, and stop with an error if `pos` is too high
- NEW: Plotting functions accept the generic `par()` inputs `oma`, `mai`, `tck`, `mgp`, `las`, and `pch` via `...` to allow default parameters to be changed. Particularly useful are `las = 1` to make axis labels horizontal and adjusting the second (left side) of the four `mai` (inner margins) input to make y-axis labels more readable.

- CHANGE: Consistently named inputs (for `summary()` the first input should be `object`, but in all others it is `x`)
- CHANGE: All console output prints more consistently with nicer spacing, especially in pipes

- FIX: In `auto_rate` S3 methods stop with a message if no rates found in object (this can happen with over-enthusiastic subsetting in the new `subset_rate` function)
- FIX: All revised to work correctly with `|>` or `%>%` pipes
