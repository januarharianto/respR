
Keep *EVERYTHING* regarding changes in here, rather than moving some to NEWS.md.
We can decide what to include in NEWS just before we release.

The more detail the better.

For now - direct changes/commits to dev go in here. Keep a separate changelog text file in each branch, then copy it in here when it is merged.

NEW - these are the highlights. Add (just add, don't move) the most interesting stuff from fn-specific changes below.

- NEW: subset_rate function - HIGHLIGHT
- NEW: adjust_rate - several new methods, including dynamic adjustments - HIGHLIGHT
- NEW: flowthrough workflow - 4 new ft-specific functions - HIGHLIGHT
- NEW: convert_val function. Simple conversion function
- NEW: inspect and inspect.ft - new checks: that columns contain numeric data, and check for infinite values
- Tested with R 4.1 and the new native pipes (`|>`)
- Tested with Apple Silicon builds of R
- Help documentation and vignettes rewritten and greatly expanded


Fixes and changes - General
(we don't have to include all these, but we should keep a full list however minor)

- FIX: Proper par() restoration behaviour. (Definitely fixed now - put them next to each other at start and use on.exit() to restore and it stills works if there is some sort of error that causes it to exit early). Unit tests for this added to all fns which plot too.

Changes
- CHANGE: S3 Generic functions (print, summary, plot) revised to work consistently, produce much cleaner, consistent outputs.
- CHANGE: added `rank` column to all `$summary` tables as first column. Helps a lot with consistent S3 summary outputs and generally keeping track of selecting summary rows
- CHANGE: Documentation - terminology clarifed. Rates now referred to as absolute (for whole animal or chamber) or mass or area specific.
- CHANGE: Updated startup message for full MEE citation
- CHANGE: changed dataframe in function outputs to `$dataframe` for consistency (was $df, $data, $dataframe, etc. Makes for MUCH simpler code)
- CHANGE: For consistency, changed primary input from `df` to `x` where appropriate (auto_rate, inspect, inspect.ft, subsample) (this was inconsistent and often confusing, in that `df` often did not have to be a data frame, but could be `inspect` etc.)
- CHANGE: The deprecated functions `inspect_data` and `pcrit` have been removed
- CHANGE: Outputs (where relevant) have function call saved to `$call` element
- CHANGE: Messages, warnings and errors now state what function they originate from (not always clear, especially in pipes)


========================== oxy_crit() ============================

- NEW: This replaces the `calc_pcrit` function from v1.1
- NEW: `method` input. This sets the method to use to determine the critical oxygen value. At present either `"bsr"` for Broken-Stick or `"segmented"` for the Segmented method. Previously both were performed.
- NEW: `thin` input. Defaults to 5000. This applies only to the Broken-Stick regression analysis. If the dataset is longer than this, this sets the number of rows to subsample it to before running the analysis. The BSR method is quite computationally intensive, so this speeds up the analysis. In testing, values above this have little effect on the result, but this may vary with different data. To prevent any subsampling and use the entire dataset enter this as `NULL`.

- NEW: S3 Generics: `plot()` has the additional inputs `legend`, `quiet` and `choose`.
- NEW: S3 Generics: `summary()` allows results to be exported via `export = TRUE`.

- CHANGE: `parallel = FALSE` is now the default. Use `parallel = TRUE` if your datasets are particularly large, or the function is taking too long to process.
- CHANGE: An increase to the internal `thin` value (see above) from 1000 to 5000 may mean results will differ slightly from the previous version (but should be more accurate).
- CHANGE: Output has been completely restructured and elements renamed. Previous code used to extract results will likely now not work.

- FIX:  Fix for problems of function importing `broken_stick()` into the cluster, resulting in the functions failing if the package wasn't loaded but called, i.e. using `respR::pcrit()`
- FIX:  Fix for plot failure when results were very close together.


========================== import_file() ============================
- NEW: Imports European style formatted numeric data which uses commas instead of points for decimals.
- NEW: Support for Presens Datamanager files
- CHANGE: imports now generally don't remove any columns (e.g. empty or NA columns). Column names now much improved (unique names, data type linked to channel IDs).
- CHANGE: import_file - updated supported systems list
- FIX: Fix for PreSens Oxyvew csv and txt files not being imported as numeric. Now separate parsing for each.
- FIX: Fix for MiniDot files not being imported as numeric.
- FIX: Fix for Pyro/Firesting numeric columns being imported as character when Firesting software replaces missing data with "---"

========================== format_time() ============================
- CHANGE: numeric time column name changed from `elapsed` to `time.num` (elapsed is not a good term, esp. for non-english speakers)
- FIX: fix for not appending new numeric time column onto a data.table
- FIX: fix for data.frames columns being renamed on return (by using data.frame instead of cbind)
- FIX: fix for not working with multiple date-time columns if one of them wasn't column 1
- FIX: fix for failing to format date-times which were already in POSIX/POSIX.ct format

========================== convert_val() ============================
- New function
- For doing simple conversions between volume, time, mass, area and pressure units
- Useful for functions that have some inputs which must be in specific units, such as `convert_DO` and `convert_rate`. See Examples.

========================== calc_rate.bg() ============================
- CHANGE: output: `$bgrate` changed to `$rate.bg`
- CHANGE: output: `$mean` changed to `$rate.bg.mean`
- CHANGE: Stops if 'oxygen' or 'time' columns not present in the input, or conflict
- CHANGE: Removed "input detected" message at start - other functions don't have this

========================== inspect() ============================
- NEW: checks that each column contains numeric data. this is the most important check, and if any column fails, the function skips the remaining checks for that column and returns a NULL result
- NEW: checks for infinite values (`Inf/-Inf`) in both time and oxygen
- NEW: added `width` input for rolling reg plot (default 0.1)
- NEW: `summary()` works on output (simply a wrapper for `print()`)
- NEW: Can pass 'rate.rev = FALSE' to plot rates not reversed (for oxygen production respirometry)
- NEW: Can pass 'legend = FALSE' to plot to suppress legend
- CHANGE: Multiple rate inspection plot improved. Now all plot on same axes ranges, better colours and spacing.
- CHANGE: Prints NA locations for all oxygen columns they are found in (previously only printed for first column)
- CHANGE: If multiple columns in input, message that 1:2 used by default by subsequent functions.
- CHANGE: Stops if 'oxygen' or 'time' columns not present in the input, or conflict
- CHANGE: prints on assigning
- CHANGE: output has additional elements `$call` and `$inputs`
- CHANGE: output `$list` and `$list_raw` renamed `$locs` and `$locs_raw`
- FIX: Rolling rate plot failed with even a single NA in time or oxygen data.
- FIX: Fix for points sometimes being plotted twice slightly offset in big datasets.

========================== auto_rate() ============================
- NEW - 'rolling' method. Performs simple rolling regression of specified width, with NO ordering of results (seemed like an omission when we have the other options)
- this goes nicely with subset_rate - allows users full control of selection criteria (albeit with fixed width regressions)
- NEW 'highest' and 'lowest' methods for absolute min/max of rates
- NEW 'maximum' and 'minimum' methods. Work the opposite way to 'min' and 'max' - now are strictly numerical, so correctly order oxygen production rates. Can only use these when rates all have the same sign.
- New internal functions for this ordering - auto_rate_lowest, auto_rate_highest
- Therefore internal functions auto_rate_min and auto_rate_max have been swapped around in terms of functionality.
- Old methods ('min', 'max') still produce same results as old code but have a prominent warning. Will properly deprecate in later version.
- NEW: added the Kernel Density metric '$density' to the '$summary' table for the 'linear' method. This allows you to see how the results are ranked in regards to KDE (also added for other methods, but as an empty column)
- NEW: plot updated with title showing which Rank current plot is, and better spacing
- NEW: plot has `rate.rev` input controlling plotting of the y-axis of the rolling rate plot. Default is `TRUE`, which means oxygen uptake rates will appear higher on the plot despite being lower numerically (i.e. more negative). Change this to `FALSE` to plot strictly numerically, if for instance youa re examining oxygen production so that higher production rates are higher.

- FIX: plot() works correctly on `auto_rate` objects (missing #' @export)
- FIX: Issue #58: `auto_rate()` stops with obscure message when input datasets are small.
- FIX: Issue #66: `auto_rate()` removed unused method argument `"default"`
- FIX: auto_rate() - Fix for plots failing where result contains an NA (fix in multi.p() involving clip)
- FIX: Fix for `auto_rate` failing to work when there were NA in the time data. (due to range() failing to return a range (returns c(NA,NA). It needs `na.rm = TRUE` or na.omit() on the data. Many other fns like sum() and mean() fail in the same way, so similar errors may occur in other places. In general data with NAs needs further testing. )
- FIX: method = "max" was missing '$total_regs' element from metadata

- CHANGE: reordered operators to put "method" second
- CHANGE: Summary table reordered to be consistent with other functions
- CHANGE: tidied and reordered summary S3 printout
  - summary table comes first, only prints out 20 rows max of results (via data.table)
  - new function (print_dens) for printing the density result more compactly


========================== convert_rate() ============================
- NEW: now converts to surface area-specific rates via the 'area' argument (acccepts 4 inputs: mm2, cm2, m2, km2)
- NEW: can now import data and output rates using 'day' as time unit e.g. "mgO2/day/m2"
- NEW: can now output oxygen used in moles e.g. "molO2/day/kg"
- CHANGE: o2.unit = NULL and time.unit = NULL now stop function instead of applying a default unit
- CHANGE: Now applies a default output unit for mass- and area specific rates as well as absolute rates.
- CHANGE: $output.unit oxygen amount component now has "O2" appended. e.g. mgO2/h/g, umolO2/day/m2 (done at end of code, does not affect any conversions).
- CHANGE: outputs renamed (e.g. `$output` to `$rate.output`, `$absolute` to `$rate.absolute` etc.). Did not affect code anywhere else since this is last function, but may affect users 1.x code for extracting/saving results.


========================== convert_DO() ============================
- NEW: Added support for % oxygen saturation ('%O2') units. % air saturation is now '%Air' and the previous '%' operator for this has been deprecated.
- NEW: Added `value.out` input. If `value.out = TRUE`, the converted values are output as a numeric vector, rather than within a `list` object.
- CHANGE: Removed ability to accept objects of class `calc_rate`, `auto_rate` or `adjust_rate`. This didn't make any sense in this function as rates are not a DO measure!
- CHANGE: Added warning for 'P' atmospheric pressure values being outside realistic range
- FIX: Fix for error with non-numeric x inputs


========================== unit_args() ============================
- NEW: Updated for new units (time in days, oxygen in mol, %O2) and more detail of which functions accept which units
- NEW: Updated with units for flowrates


========================== adjust_rate() ============================
- NEW: completely rewritten to allow several new methods, including dynamic background correction
- (same original inputs (x, by) plus five new ones. Method defaults to "mean" so old code should output same results as it did before)
- CHANGE: output: `corrected` changed to `rate.adjusted`
- CHANGE: output: `input.rate` changed to `rate.input`
- FIX: summary() works correctly on `adjust_rate` objects (missing #' @export)


========================== subsample() ============================
- NEW: Now works on vectors as well as data frames
- NEW: Added 'length.out' argument which uniformly subsamples to exact number of rows (data frame) or length (vectors)
- FIX: Now works and plots correctly (first data column only) with multicolumn data frames


========================== calc_rate() ============================
- NEW: plot updated with title showing which Rank current plot is, and better spacing
- NEW: now calculates from start of the data if 'from' is NULL, and to the end of the data if `to` is NULL.
- NEW: S3 Generics: `plot()` has the additional input `choose`.

- CHANGE: Detects and warns if multi-column input (matches auto_rate behaviour)
- CHANGE: added a bunch of new input checks
- CHANGE: output elements renamed
- CHANGE: most `$summary` columns renamed
- CHANGE: Summary table columns reordered to be consistent with other functions
- FIX: plots full 4 panel plot by default (was multi.p fn of df and regression only..)
- FIX: fix for failure to plot with very small datasets (2-5 values)
- FIX: Fix for `calc_rate` failing to work when there were NA in the time data. (due to range() failing to return a range (returns c(NA,NA). It needs `na.rm = TRUE` or na.omit() on the data. Many other fns like sum() and mean() fail in the same way, so similar errors may occur in other places. In general data with NAs needs further testing. )
- FIX - by = "proportion" and by = "o2" now work correctly with oxygen production data.
About the above. All changes made to truncate_data. Previously these methods didn't work with rising O2 as the code for finding the from/to values assumed it was decreasing. Now it identifes all data within the range of from/to. Essentially this makes from/to interchangeable. This however breaks the previous behaviour where it found first occurrence of 'from', then the first occurrence of 'to' after that, so you could use it with intermittent-flow data and it would get the from-to rate from the first replicate. This is such a niche use case, it's not worth trying to fix it (although i almost figured it out actually). Users with these data need to know how to subset them anyway, so they can just subset this replicate too.
The change will mean with some data it will give different results than the old way, because of the way the from-to region is identified internally. Old way - first occurrence of the 'from' value, then first occurrence of the 'to' value after that. New way - first occurrence of the 'from' value, then LAST occurrence of the 'to' value after that. With most data any difference in rates should be very minor. I can only see this making a difference in really noisy or really shallow data.


========================== subset_data() ============================
- NEW: support for `inspect.ft` objects
- NEW: added 'quiet' input to allow console output to be suppressed. (still does for now, but make no print the default?) - also add this to others which print by default? Think it's only inspect/inspect.ft
- NEW: now subsets from start of the data if 'from' is NULL, and to the end of the data if `to` is NULL.
- CHANGE: Rewrote help docs - especially specified by = oxygen/proportion applies to first column in multiple O2 column dataframes
- CHANGE: Warns if output subset is empty
- FIX: fix for failure with inspect() objects
- FIX: by = "proportion" and by = "o2" now work correctly with oxygen production data (changes made to truncate_data)
- Note changes above now generally result in larger/longer subsets. Extra rows are at the end (because of change in identifying where 'to' is - see comment on calc_rate)


========================== flowthrough ============================
- inspect.ft
- calc_rate.ft
- adjust_rate.ft
- convert_rate.ft

- Completely new workflow, specific to flowthough data.
- Will add more detail in vignettes. Help file is pretty complete


========================== data ============================

- CHANGE: Example data are now all data.tables
- CHANGE: flowthrough.rd amended to make delta column (i.e. rates) negative values

NEW: new example datasets
- `background_lin.rd` - linear increasing background, for testing new background correction functionality
- `background_exp.rd` - exponential increasing background, for testing new background correction functionality
- `flowthrough_mult.rd` - multiple column flowthrough data
- `flowthrough_sim.rd` - flowthrough data with increasing background recording
- `algae.rd` - oxygen production data



========================== internals ============================
New utility validation fns
- verify_by - updated - can select which 'by' inputs function accepts, or if it is required, plus output a custom message
- column.val - for inputs which take column numbers
- input.val - for other input validations


========================== S3 Methods ============================

All
- Made inputs consistent (for summary first input should be 'object', but in all others 'x', or gives CMD check error)
- All plot S3 have `quiet` input to suppress console output
- All summary S3 (where appropriate) have `export = TRUE` for export of summary table/value
- All S3 (where appropriate) have `pos` input
- All stop if 'pos' too high
- Added `return(invisible(object))` where missing to allow piping
- All print more consistently with nicer spacing, especially in pipes
- auto_rate - all S3 methods stop with message if no rates found (can happen with over-enthusiastic subsetting in new subset_rate fn)

print.adjust_rate
- FIX: prints adjustment correctly if pos > 1

summary.adjust_rate
- FIX: 'adjustment' column was missing

summary.convert_rate
- FIX: prints summary table as columns correctly

print.inspect
- NEW: if uneven time, now prints min and max intervals found
- NEW: time error locations now printed out when multiple o2 columns inspected

print.auto_rate
- CHANGE: prints all results of interval method regardless of pos or width

print.calc_rate.ft
- NEW: now has `pos` argument

plot.calc_rate
- CHANGE: changed `rep` to `pos` for consistency

mean.adjust_rate
mean.adjust_rate.ft
mean.auto_rate
mean.calc_rate
mean.calc_rate.bg
mean.calc_rate.ft
mean.convert_rate
mean.convert_rate.ft
- NEW: All work on relevant output rate. None alter the output (i.e. normal invisible return of input object), but have `export` argument, so values can be exported. Also `pos` input to select range. None really *that* useful except `mean.convert_rate`, which is the one we can point users to, so they can come up with a final mean rate
