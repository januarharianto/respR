
Keep *EVERYTHING* regarding changes in here, rather than moving some to NEWS.md.
We can decide what to include in NEWS just before we release.

The more detail the better.

For now - direct changes/commits to dev go in here. Keep a separate changelog text file in each branch, then copy it in here when it is merged.

NEW - these are the highlights. Add (*just add*, don't move) the most interesting stuff from fn-specific changes below.

- NEW: subset_rate function - HIGHLIGHT
- NEW: adjust_rate - several new methods, including dynamic adjustments - HIGHLIGHT
- NEW: flowthrough workflow - 4 new ft-specific functions - HIGHLIGHT
- NEW: convert_val function. Simple conversion function
- NEW: inspect and inspect.ft - new checks: that columns contain numeric data and check for infinite values
- Tested with R 4.1 and the new native pipes (`|>`)
- Tested with Apple Silicon builds of R
- Help documentation and vignettes rewritten and greatly expanded
- `citation("respR")` returns the citation to the `respR` journal publication, including a BibTeX entry for LaTeX users.


Fixes and changes - General
(we don't have to include all these, but we should keep a full list however minor)

- FIX: Proper par() restoration behaviour. (Definitely fixed now - put them next to each other at start and use on.exit() to restore and it stills works if there is some sort of error that causes it to exit early). Unit tests for this added to all fns which plot too.

Changes
- CHANGE: S3 Generic functions (print, summary, plot) revised to produce much cleaner, consistent outputs.
- CHANGE: added `rank` column to all `$summary` tables as first column. Helps a lot with consistent S3 summary outputs and generally keeping track of selecting summary rows
- CHANGE: Documentation - terminology clarifed. Rates now referred to as absolute (for whole animal or chamber) or mass- or area-specific.
- CHANGE: Updated startup message for full MEE citation
- CHANGE: changed dataframe in function outputs to `$dataframe` for consistency (was $df, $data, $dataframe, etc. Makes for MUCH simpler code)
- CHANGE: For consistency, changed primary input from `df` to `x` where appropriate (auto_rate, inspect, inspect.ft, subsample) (this was inconsistent and often confusing, in that `df` often did not have to be a data frame, but could be a different class of object.)
- CHANGE: The deprecated functions `inspect_data` and `pcrit` have been removed
- CHANGE: Outputs (where relevant) have function call saved to `$call` element
- CHANGE: Outputs (where relevant) have all inputs saved to `$inputs` element
- CHANGE: Messages, warnings and errors now state what function they originate from (not always clear, especially in pipes)


========================== oxy_crit() ============================

- NEW: This replaces the `calc_pcrit` function from v1.1
- NEW: `method` input. This sets the method to use to determine the critical oxygen value. At present either `"bsr"` for Broken-Stick or `"segmented"` for the Segmented method. Previously both were performed.
- NEW: `thin` input. Defaults to 5000. This applies only to the Broken-Stick regression analysis. If the dataset is longer than this, this determines the number of rows it is uniformly subsampled to before running the analysis. The BSR method is quite computationally intensive, so this speeds it up. In testing, values above this have little effect on the result, but this may vary with different data. To prevent any subsampling and use the entire dataset enter this as `NULL`.

- NEW: S3 Generics: `plot()` has the additional inputs `legend`, `quiet`, `rate.rev` and `panel`.
- NEW: S3 Generics: `summary()` allows results to be exported via `export = TRUE`.

- CHANGE: `parallel = FALSE` is now the default. Use `parallel = TRUE` if your datasets are particularly large, or the function is taking too long to process.
- CHANGE: uptake rates are now plotted as negative in the rolling rate plot on a reversed y-axis. Plots look the same, except y-axis values are now negative. There is a `rate.rev` input to control this, for instance if you are using the function with existing positive rate values.
- CHANGE: An increase to the internal `thin` value (see above) from 1000 to 5000 may mean results will differ slightly from the previous version (but should be more accurate).
- CHANGE: Output has been completely restructured and elements renamed. Previous code used to extract results will likely now not work.

- FIX:  Fix for problems of function importing `broken_stick()` into the cluster, resulting in the functions failing if the package wasn't loaded but called, i.e. using `respR::pcrit()`
- FIX:  Fix for plot failure when results were very close together.


========================== import_file() ============================
- NEW: Imports European style formatted numeric data which uses commas instead of points for decimals.
- NEW: Support for Presens Datamanager files
- CHANGE: imports now generally don't remove any columns (e.g. empty or NA columns). Column names now much improved (unique names, data type linked to channel IDs).
- CHANGE: import_file - updated supported systems list
- FIX: Fix for PreSens Oxyvew csv and txt files not being imported as numeric. Now separate parsing for each.
- FIX: Fix for MiniDot files not being imported as numeric.
- FIX: Fix for Pyro/Firesting numeric columns being imported as character when Firesting software replaces missing data with "---"

========================== format_time() ============================
- CHANGE: numeric time column name changed from `elapsed` to `time.num`
- FIX: fix for not appending new numeric time column onto a data.table
- FIX: fix for data.frames columns being renamed on return (by using data.frame instead of cbind)
- FIX: fix for not working with multiple date-time columns if one of them wasn't column 1
- FIX: fix for failing to format date-times which were already in POSIX/POSIX.ct format

========================== convert_val() ============================
- New function
- For doing simple conversions between volume, time, mass, area and pressure units
- Useful for functions that have some inputs which must be in specific units, such as `convert_DO` and `convert_rate`. See Examples.

========================== calc_rate.bg() ============================
- NEW: The oxygen timeseries is now plotted against both time and row index
- NEW: Plots have `legend` input to suppress equation text boxes
- CHANGE: output: `$bgrate` changed to `$rate.bg`
- CHANGE: output: `$mean` changed to `$rate.bg.mean`
- CHANGE: Stops if 'oxygen' or 'time' columns not present in the input, or conflict
- CHANGE: Removed "input detected" message at start - other functions don't have this

========================== inspect() ============================
- NEW: checks that each column contains numeric data. this is the most important check, and if any column fails, the function skips the remaining checks for that column and returns a NULL result
- NEW: checks for infinite values (`Inf/-Inf`) in all inspected columns
- NEW: added `width` input to adjust rolling rate plot (default is 0.1)
- NEW: Can pass 'rate.rev = FALSE' to plot rates *not* numerically reversed (for oxygen production respirometry)
- NEW: Can pass 'legend = FALSE' to suppress legends
- NEW: An additional data type (for example temperature, salinity, etc.) can be plotted alongside the oxygen timeseries by using the `add.data` input. This should be a column number from the same input data frame and share the same `time` data. Data checks are *not* performed on this column (unless all columns are specifically inspected); it is simply a plotting aid to understand where the parameter may affect rates in different regions of the data. There is similar functionality in `inspect.ft`.
- NEW: `summary()` works on output (simply a wrapper for `print()`)
- CHANGE: Multiple rate plot improved. Now all plot on same axis range, better colours and spacing.
- CHANGE: Prints NA locations for all oxygen columns they are found in (previously only printed for first column)
- CHANGE: If multiple columns in input, message that 1:2 used by default by subsequent functions, although all are inspected.
- CHANGE: Stops if `oxygen` or `time` columns are not present in the input, or conflict with each other
- CHANGE: prints on assigning
- CHANGE: output has additional elements `$call`, `$inputs` and `$add.data`
- CHANGE: output `$list` and `$list_raw` renamed `$locs` and `$locs_raw`
- FIX: Rolling rate plot failed with even a single NA in time or oxygen data.
- FIX: Fix for points sometimes being plotted twice slightly offset in large datasets.

========================== auto_rate() ============================
- NEW - 'rolling' method. Performs simple rolling regression of specified width, with *no* ordering of results. This pairs nicely with the new `subset_rate` function to allows users full control of selection criteria (albeit with fixed width regressions)
- NEW `highest` and `lowest` methods for absolute minimum and maximum of rates regardless of sign
- NEW `maximum` and `minimum` methods. These work the *opposite* way to `min` and `max` from v1.1. These are strictly numerical, so correctly order oxygen production rates, and can only be uses when rates all have the same sign. The `min`and `max` methods still produce same results as in v1.1 but have a prominent warning. These will be deprecated in a later version of `respR`.
- (New internal functions for this ordering - `auto_rate_lowest`, `auto_rate_highest`. Therefore internal functions `auto_rate_min` and `auto_rate_max` have been swapped around in terms of functionality).

- NEW: added the Kernel Density metric $density to the `$summary` table for the `linear` method. This allows you to see how the results are ranked in regards to KDE (also present for other methods, but as an empty column).
- NEW: Plot updated with title showing the Rank of the current plot. It also now plots oxygen and rate against both time and row index.
- NEW: plot has `rate.rev` input controlling plotting of the y-axis of the rolling rate plot. Default is `TRUE`, which means oxygen uptake rates will appear higher on the plot despite being lower numerically (i.e. more negative). Change this to `FALSE` to plot strictly numerically, if for instance you are examining oxygen production so that higher production rates are higher.
- NEW: S3 Generics: `plot()` has the additional inputs `panel` to plot selected panels individually, and `legend` to suppress the legend and other labels.

- FIX: plot() works correctly on `auto_rate` objects (missing #' @export)
- FIX: fix for stopping with an obscure message when input datasets are small (Issue #58).
- FIX: removed unused method `"default"` (Issue #66)
- FIX: Fix for plots failing where result contains an `NA` (fix in multi.p() involving clip)
- FIX: Fix for `auto_rate` failing to work when there were `NA` in the time data. (due to range() failing to return a range (returns c(NA,NA). It needs `na.rm = TRUE` or na.omit() on the data. Many other fns like sum() and mean() fail in the same way, so similar errors may occur in other places. In general data with NAs needs further testing.)
- FIX: `method = "max"` was missing `$total_regs` element from metadata

- CHANGE: reordered inputs to put `method` second
- CHANGE: Summary table reordered to be consistent with other functions
- CHANGE: tidied and reordered summary S3 printout
  - summary table comes first, only prints out 20 rows max of results (via data.table)
  - new function (print_dens) for printing the density result more compactly


========================== convert_rate() ============================
- NEW: Can now convert to surface area-specific rates via the `area` input (accepts `"mm2"`, `"cm2"`, `"m2"`, `"km2"`)
- NEW: Can now import data and output rates using `"day"` as the time unit e.g. `"mgO2/day/m2"`
- NEW: Can now output oxygen used in moles e.g. `"molO2/day/kg"`
- CHANGE: The `o2.unit` input has been renamed to `oxy.unit`
- CHANGE: `oxy.unit = NULL` and `time.unit = NULL` now stop the function instead of applying a default unit
- CHANGE: Now applies a default output unit for mass- and area specific rates as well as absolute rates.
- CHANGE: `$output.unit` oxygen amount component now has "O2" appended to ensure it is not confused with the mass-specific component. e.g. `"mgO2/h/mg"`, `"umolO2/day/m2"` (done at end of code, does not affect any conversions).
- CHANGE: output elements have been renamed (e.g. `$output` to `$rate.output`, `$absolute` to `$rate.absolute` etc.). Did not affect code anywhere else since this is last function, but may affect users 1.x code for extracting/saving results.


========================== convert_DO() ============================
- NEW: Added support for % oxygen saturation (`"%O2"`) units. % air saturation is now `"%Air"` and the previous `"%"` operator for this has been deprecated.
- NEW: Added `value.out` input. The default is `value.out = TRUE` and means the converted values are output as a numeric vector, rather than within a `list` object. If `FALSE` the output is an object of class `convert_DO` which works with `print` and `summary`
- CHANGE: Removed ability to accept objects of class `calc_rate`, `auto_rate` or `adjust_rate`. This didn't make any sense in this function as rates are not a DO measure!
- CHANGE: Added warning for `P` atmospheric pressure values being outside a realistic range
- FIX: Fix for error with non-numeric `x` inputs


========================== unit_args() ============================
- NEW: Updated for new units (time in days, oxygen in mol, %O2) and more detail of which functions accept which units
- NEW: Updated with units for flowrates


========================== adjust_rate() ============================
- NEW: completely rewritten to allow several new methods, including dynamic background correction. It has the same original inputs (x, by) plus five new ones. The `method` defaults to `"mean"` so previous code will output the same results as it did in v1.1
- CHANGE: In the output, `corrected` changed to `rate.adjusted`
- CHANGE: In the output, `input.rate` changed to `rate.input`
- FIX: `summary()` now works correctly


========================== subsample() ============================
- NEW: Now works on vectors as well as data frames
- NEW: Added `length.out` input which uniformly subsamples to an exact number of rows (data frames) or length (vectors)
- FIX: Now works and plots correctly (first data column only) with multicolumn data frames


========================== calc_rate() ============================
- NEW: Plot updated with title showing the Rank of the current plot. It also now plots oxygen and rate against both time and row index
- NEW: Now calculates from start of the data if `from = NULL`, and to the end of the data if `to = NULL`
- NEW: S3 Generics: `plot()` has the additional inputs `panel` to plot selected panels individually, and `legend` to suppress the legend and other labels.

- CHANGE: Detects and warns about multi-column inputs
- CHANGE: Output elements have been renamed
- CHANGE: Most `$summary` columns have been renamed
- CHANGE: Summary table columns reordered to be consistent with other functions
- CHANGE: Plots full 4 panel plot by default
- FIX: Fix for failure to plot with very small datasets (2-5 values)
- FIX: Fix for failing to work when there were `NA` in the time data. (due to range() failing to return a range (returns c(NA,NA). It needs `na.rm = TRUE` or na.omit() on the data. Many other fns like sum() and mean() fail in the same way, so similar errors may occur in other places. In general data with NAs needs further testing. )
- FIX: `by = "proportion"` and `by = "oxygen"` now work correctly with oxygen *production* data.
(About the above: all changes made to `truncate_data`. Previously these methods didn`t work with rising oxygen as the code for finding the from/to values assumed it was decreasing. Now it identifes all data within the range of from/to. Essentially this makes from/to interchangeable. This however breaks the previous behaviour where it found first occurrence of `from`, then the first occurrence of `to` after that, so you could use it with intermittent-flow data and it would get the from-to rate from the first replicate. This is such a niche use case, it`s not worth trying to fix it (although i almost figured it out actually). Users with these data need to know how to subset them anyway, so they can just subset this replicate too.)
Note this change means with some data it may give slightly different results than v1.1 because of the way the from-to region is identified internally. With most data any difference in rates should be very minor.


========================== subset_data() ============================
- NEW: Support for `inspect.ft` objects
- NEW: Added `quiet` input to allow console output to be suppressed
- NEW: Now subsets from start of the data if `from = NULL`, and to the end of the data if `to = NULL`
- CHANGE: Rewrote help documentation, particularly to specify that `by = "oxygen"` or `by = "proportion"` applies to first column in multi-column dataframes
- CHANGE: Warns if output subset is empty
- FIX: Fix for failure with `inspect()` objects
- FIX: `by = "proportion"` and `by = "oxygen"` now work correctly with oxygen production data. Note this now generally results in longer subsets than v1.1 code because of a change in identifying where `to` is within the data.


========================== flowthrough ============================
- NEW: `inspect.ft`
- NEW: `calc_rate.ft`
- NEW: `adjust_rate.ft`
- NEW: `convert_rate.ft`

- This is a completely new workflow specific to flowthough respirometry data. See vignette for full details.


========================== data ============================

- CHANGE: Example data are now all `data.table`
- CHANGE: `flowthrough.rd` amended to make delta column (i.e. rates) negative values
- CHANGE: `flowthrough.rd` column names changed to `time`, `oxy.out`, `oxy.in` and `oxy.delta`
- CHANGE: `zeb_intermittent.rd` column names changed to `Time` and `Oxygen`
- CHANGE: `sardine.rd` has had a `Temperature` column added (to demonstrate the `inspect` ability to plot an additional data type)

NEW: New example datasets
- `background_con.rd` - constant level background, for testing new background correction functionality
- `background_lin.rd` - linear increasing background, for testing new background correction functionality
- `background_exp.rd` - exponential increasing background, for testing new background correction functionality
- `flowthrough_mult.rd` - multiple column flowthrough data
- `flowthrough_sim.rd` - flowthrough data with increasing background recording
- `algae.rd` - oxygen production data


========================== internals ============================
New utility validation fns
- `verify_by` - updated - can select which `by` inputs a function accepts, or if it is required, plus output a custom message
- `column.val` - for inputs which take column numbers
- `input.val` - for other input validations


========================== S3 Methods ============================

All
- CHANGE: Consistently named inputs (note, for `summary()` the first input should be `object`, or it gives a CMD check error, but in all others it is `x`)
- CHANGE: All print more consistently with nicer spacing, especially in pipes
- NEW: All `plot` S3 have `quiet` input to suppress console output
- NEW: All `summary` S3 (where appropriate) have `export = TRUE` for export of summary table or value
- NEW: All S3 (where appropriate) have `pos` input. All stop if `pos` too high
- NEW: Plotting functions accept the generic `par()` inputs `oma`, `mai`, `tck`, `mgp`, `las`, and `pch` via `...` to allow default parameters to be changed. Particularly useful are `las = 1` to make axis labels horizontal and adjusting the second (left side) of the four `mai` (inner margins) input to make y-axis labels more readable.
- FIX: In `auto_rate` S3 methods stop with a message if no rates found in object (this can happen with over-enthusiastic subsetting in the new `subset_rate` function)
- FIX: All revised to work correctly with `|>` or `%>%` pipes

(|Move these specific changes to relevant fn section)

`print.adjust_rate`
- FIX: Prints adjustment correctly if `pos` > 1

`summary.adjust_rate`
- FIX: The `adjustment` column was missing from summary table

`summary.convert_rate`
- FIX: Prints summary table as columns correctly

`print.inspect`
- NEW: If uneven time intervals are detected, it now prints the minimum and maximum intervals found
- FIX: Any `time` error locations are now printed out when multiple oxygen columns are inspected

`print.auto_rate`
- CHANGE: Prints all results of `"interval"` method regardless of `pos` or `width` inputs

`plot.calc_rate`
- CHANGE: Changed `rep` to `pos` for consistency

`mean.adjust_rate`
`mean.adjust_rate.ft`
`mean.auto_rate`
`mean.calc_rate`
`mean.calc_rate.bg`
`mean.calc_rate.ft`
`mean.convert_rate`
`mean.convert_rate.ft`
- NEW: These are new generic S3 functions for calculating mean rates, and work on the relevant output rate. None alter the output object, but have an `export` input so the mean values can be exported as a numeric value if `export = TRUE`. They also have a `pos` input (where relevant) to select a range of rates to average. Most useful is `mean.convert_rate` which can be used to output a final mean rate at the endof an analysis.
