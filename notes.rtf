{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18360\viewh19700\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
- Version number needs changed to current\
\
\
Note these are general good practice guidelines only. All experiments are different, with different questions, etc\
\
\
when to use respR functions\
auto_rate - method = linear\
'steady state' experiments - When your specimen is not subject to treatments that might cause its metabolic rate to flucutuate constantly over the course of the experiemnt. That is, when you are looking for a consistent rates, such as representing routine metabolic rate, or in the case of an animal under excercise a consistent active metabolic rate. \
\
auto_rate - method = max\
When your specimens is active, or has been exercised and placed in a respirometer, and you want to know its maximum rate. \
This necessarily requires a time window (width) to be specified over which to determine the rate, which should be carefully selected, and consistent if you are comparing specimens. \
\
auto_rate - method = min\
Similarly, when your specimens is inactive, quiescent, etc. \
Again, this necessarily requires a time window (width) to be specified, which should be carefully selected, and consistent if you are comparing specimens. \
When you want to know the lowest rates, representative of basal or standard metabolic rates. \
\
when not to use auto_rate \
- flowthrough. see calc_rate.ft. This respirometry method is currently unsupported in auto_rate, but it is in our plans to support it. \
- intermittent flow- while we have had generally good results using it,  flushes are likely to confuse the algorithms. Recommend subsetting out experiemntal periods. \
\
\
\
When not to use respR\
Our aim is to create respR to be non-specialised, able to process and and all any and all respirometry data with minimal barriers to entry. \
However, there may be situations where it may not work for you, or where particular functions are not yet suitable for your data. \
- non-aquatic respirometry. \
Currently, all functions in respR can readily be used to process and analyses air respirometry data, except the final step of converting the rate to specific units (i.e. convert_rate). We are currently exploring how we can support it in this function. Please get in touch if you can help advise us on this. \
\
- intermittent flow respirometry\
Currently intermittent flow data can be analysed easily in respR with a little data organisation. The fluctiating up and down nature on IF data causes problems for some of the data detection functionality, but this can be got around by subsetting datasets into separate \
 respR has support within some functions (e.g. ) for subsetting or specifying data regions internally. Others do not (e.g. autorate), but we are working on solutions for this. At present this can be got around easily by manually subsetting into a separate dataframe or object, or using our internal subset function. \
\
auto_rate - automatic linear detection\
datasets smaller than <500? \
In out testing (vig link) we found autorate to perfomr well, but with occiasional mistakes? in smaller datasets (aroudn 100 datapoints). But performance greatlky imporved with datasets of 500. \
We found in our testing LoLinR to be slightly better at identifying linear regions in datasets this small. However, respR much better with bigger\
Therefore if your datasets are less than <500, and want to use automatic linear detection to determine rates, you may prefer to use LoLinR. However, LoLinR is a general package aimed at all time series datasets, so does not include the other functionality contained in respR for analysing and processing respirometry data. The slope results you obtain with LoLinR can however be manually input into respR functions (e.g. adjust_rate and convert_rate) for conversion to actual units. \
\
\
format_time \
- add date-time auto detection\
- fix start bug with dataframes\
- day change bug? - rMR file}